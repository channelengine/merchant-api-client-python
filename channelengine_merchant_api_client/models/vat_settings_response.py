# coding: utf-8

"""
    ChannelEngine Merchant API

    ChannelEngine API for merchants  # noqa: E501

    The version of the OpenAPI document: 2.9.10
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from channelengine_merchant_api_client.configuration import Configuration


class VatSettingsResponse(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'country_iso': 'str',
        'no': 'str',
        'standard_rate': 'float',
        'reduced_rate': 'float',
        'super_reduced_rate': 'float'
    }

    attribute_map = {
        'country_iso': 'CountryIso',
        'no': 'No',
        'standard_rate': 'StandardRate',
        'reduced_rate': 'ReducedRate',
        'super_reduced_rate': 'SuperReducedRate'
    }

    def __init__(self, country_iso=None, no=None, standard_rate=None, reduced_rate=None, super_reduced_rate=None, local_vars_configuration=None):  # noqa: E501
        """VatSettingsResponse - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._country_iso = None
        self._no = None
        self._standard_rate = None
        self._reduced_rate = None
        self._super_reduced_rate = None
        self.discriminator = None

        self.country_iso = country_iso
        self.no = no
        if standard_rate is not None:
            self.standard_rate = standard_rate
        self.reduced_rate = reduced_rate
        self.super_reduced_rate = super_reduced_rate

    @property
    def country_iso(self):
        """Gets the country_iso of this VatSettingsResponse.  # noqa: E501


        :return: The country_iso of this VatSettingsResponse.  # noqa: E501
        :rtype: str
        """
        return self._country_iso

    @country_iso.setter
    def country_iso(self, country_iso):
        """Sets the country_iso of this VatSettingsResponse.


        :param country_iso: The country_iso of this VatSettingsResponse.  # noqa: E501
        :type country_iso: str
        """

        self._country_iso = country_iso

    @property
    def no(self):
        """Gets the no of this VatSettingsResponse.  # noqa: E501


        :return: The no of this VatSettingsResponse.  # noqa: E501
        :rtype: str
        """
        return self._no

    @no.setter
    def no(self, no):
        """Sets the no of this VatSettingsResponse.


        :param no: The no of this VatSettingsResponse.  # noqa: E501
        :type no: str
        """

        self._no = no

    @property
    def standard_rate(self):
        """Gets the standard_rate of this VatSettingsResponse.  # noqa: E501


        :return: The standard_rate of this VatSettingsResponse.  # noqa: E501
        :rtype: float
        """
        return self._standard_rate

    @standard_rate.setter
    def standard_rate(self, standard_rate):
        """Sets the standard_rate of this VatSettingsResponse.


        :param standard_rate: The standard_rate of this VatSettingsResponse.  # noqa: E501
        :type standard_rate: float
        """

        self._standard_rate = standard_rate

    @property
    def reduced_rate(self):
        """Gets the reduced_rate of this VatSettingsResponse.  # noqa: E501


        :return: The reduced_rate of this VatSettingsResponse.  # noqa: E501
        :rtype: float
        """
        return self._reduced_rate

    @reduced_rate.setter
    def reduced_rate(self, reduced_rate):
        """Sets the reduced_rate of this VatSettingsResponse.


        :param reduced_rate: The reduced_rate of this VatSettingsResponse.  # noqa: E501
        :type reduced_rate: float
        """

        self._reduced_rate = reduced_rate

    @property
    def super_reduced_rate(self):
        """Gets the super_reduced_rate of this VatSettingsResponse.  # noqa: E501


        :return: The super_reduced_rate of this VatSettingsResponse.  # noqa: E501
        :rtype: float
        """
        return self._super_reduced_rate

    @super_reduced_rate.setter
    def super_reduced_rate(self, super_reduced_rate):
        """Sets the super_reduced_rate of this VatSettingsResponse.


        :param super_reduced_rate: The super_reduced_rate of this VatSettingsResponse.  # noqa: E501
        :type super_reduced_rate: float
        """

        self._super_reduced_rate = super_reduced_rate

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, VatSettingsResponse):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, VatSettingsResponse):
            return True

        return self.to_dict() != other.to_dict()
